name: IAC app changes

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/iac-apps.yml"
      - "certs"
      - "kubernetes/namespaces/**"
      - "kubernetes/charts/**"

jobs:
  deploy-apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set kubeconfig from Secret
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_SECRET }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Setup helm
        uses: azure/setup-helm@v4.3.0

      - name: Verify Cluster Connection
        run: |
          kubectl cluster-info
          echo "Connection to the cluster was successful."

      - name: Deploy namespaces
        run: |
          for manifest in kubernetes/namespaces/*.yaml; do
            if [ -f "$manifest" ]; then
              echo "Creating or updating namespace: $manifest"
              kubectl apply -f "$manifest"
            fi
          done

      - name: Setup sealed-secrets controller
        run: |
          echo "${{ secrets.SEALED_SECRETS_KEY }}" > prv.key
          kubectl delete secret sealed-secrets-key -n security --ignore-not-found
          kubectl create secret tls sealed-secrets-key -n security --cert=./certs/sealed-secrets/secret.crt --key=./prv.key
          rm prv.key
          kubectl -n security label secret sealed-secrets-key sealedsecrets.bitnami.com/sealed-secrets-key=active
          
          helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
          helm upgrade --install sealed-secrets -n security sealed-secrets/sealed-secrets

      - name: Deploy secrets
        run: |
          for secret_path in kubernetes/secrets/*; do
              if [ -d "secret_path" ]; then
                secret_name=$(basename "secret_path")
                echo "Creating or updating: $secret_name"
        
                kubectl apply -f "$secret_path"
            fi
          done

      - name: Deploy charts
        run: |
          for namespace_dir in kubernetes/charts/*; do
            if [ -d "$namespace_dir" ]; then
              namespace_name=$(basename "$namespace_dir")
              echo "Processing namespace: $namespace_name"
          
              for chart_path in "$namespace_dir"/*; do
                if [ -d "$chart_path" ]; then
                  chart_name=$(basename "$chart_path")
                  echo "Creating or updating: $chart_name in $namespace_name"
          
                  helm dependency update "$chart_path"
          
                  helm upgrade --install "$chart_name" "$chart_path" -n "$namespace_name" --atomic --wait
                fi
              done
            fi
          done